kind: pipeline
type: docker
name: mini-web-deployment

steps:
  - name: build-and-deploy
    image: docker:dind
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: app-config
        path: /config
    commands:
      # 确保基础目录结构存在
      - mkdir -p /volume1/docker/1panel/apps/local
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/data
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/logs
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/configs
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/screenshots
      # 设置目录权限
      - chmod -R 755 /volume1/docker/1panel/apps/local/mini-web
      # 创建占位文件确保目录不为空
      - touch /volume1/docker/1panel/apps/local/mini-web/data/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/logs/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/configs/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/screenshots/.gitkeep
      # 构建并部署容器
      - docker build -t mini-web:latest .
      - docker stop mini-web-container || true
      - docker rm mini-web-container || true
      - >
        docker run -d --name mini-web-container --network 1panel-network
        -p 10202:80
        -v /volume1/docker/1panel/apps/local/mini-web/data:/app/data
        -v /volume1/docker/1panel/apps/local/mini-web/logs:/app/logs
        -v /volume1/docker/1panel/apps/local/mini-web/configs:/app/configs
        -v /volume1/docker/1panel/apps/local/mini-web/screenshots:/tmp/rdp_screenshots
        --restart always
        mini-web:latest

volumes:
  - name: docker-socket
    host:
      path: /var/run/docker.sock
  - name: app-config
    host:
      path: /volume1/docker/1panel/apps/local/mini-web/configs

trigger:
  branch:
    - master