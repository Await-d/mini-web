kind: pipeline
type: docker
name: mini-web-deployment

steps:
  - name: build-frontend
    image: node:18
    commands:
      - cd mini-web/frontend
      - rm -rf node_modules package-lock.json
      - npm cache clean --force
      - npm install
      - npm run build
      - echo "Frontend build completed"
    
  - name: build-backend
    image: golang:1.23-alpine
    commands:
      - cd mini-web/backend
      - go mod download
      - CGO_ENABLED=0 GOOS=linux go build -o mini-web-server ./cmd/server
      - echo "Backend build completed"
    depends_on:
      - build-frontend

  - name: build-and-deploy
    image: docker:dind
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: volume1
        path: /volume1
    commands:
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/data
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/logs
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/configs
      - mkdir -p /volume1/docker/1panel/apps/local/mini-web/screenshots
      - chmod -R 755 /volume1/docker/1panel/apps/local/mini-web
      - touch /volume1/docker/1panel/apps/local/mini-web/data/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/logs/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/configs/.gitkeep
      - touch /volume1/docker/1panel/apps/local/mini-web/screenshots/.gitkeep
      - echo "Building Mini-Web integrated image..."
      - docker build -t mini-web:latest -f Dockerfile .
      - echo "Image build completed"
      - docker stop mini-web-container || true
      - docker rm mini-web-container || true
      - >
        docker run -d --name mini-web-container
        --network 1panel-network
        -p 10202:80
        -v /volume1/docker/1panel/apps/local/mini-web/data:/app/data
        -v /volume1/docker/1panel/apps/local/mini-web/logs:/app/logs
        -v /volume1/docker/1panel/apps/local/mini-web/configs:/app/configs
        -v /volume1/docker/1panel/apps/local/mini-web/screenshots:/tmp/rdp_screenshots
        --restart always
        mini-web:latest
      - echo "Mini-Web container deployed successfully at http://localhost:10202"
    depends_on:
      - build-backend

volumes:
  - name: docker-socket
    host:
      path: /var/run/docker.sock
  - name: volume1
    host:
      path: /volume1

trigger:
  branch:
    - master